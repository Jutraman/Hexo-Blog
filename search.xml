<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo</title>
    <url>/cs/network/hexo/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul>
<li>静态博客</li>
<li>基于 Node.js</li>
<li>适用于 Windows，MacOS，Linux 等系统</li>
<li>官方文档 <a class="link"   target="_blank" rel="noopener" href="https://hexo.io/" >https://hexo.io/<i class="fas fa-external-link-alt"></i></a></li>
</ul>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>本文使用的机器环境为 </p>
<ul>
<li>客户端</li>
</ul>
<ul>
<li>macOS Monterey 12+</li>
<li>Node.js 17.6</li>
<li>npm 8.5</li>
<li>Hexo 6.0</li>
<li>OpenSSH 8.6</li>
<li>Git 2.32</li>
</ul>
<ul>
<li>服务器端</li>
</ul>
<ul>
<li>Alibaba Cloud Linux release 3</li>
<li>Apache 2.4.37</li>
<li>OpenSSH 8.0</li>
<li>Git 2.27</li>
</ul>
<hr>
<h2 id="客户端安装"><a href="#客户端安装" class="headerlink" title="客户端安装"></a>客户端安装</h2><h4 id="安装必备程序"><a href="#安装必备程序" class="headerlink" title="安装必备程序"></a>安装必备程序</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">## macOS 有多种安装方式，这里使用 brew，如果系统有预装版本，不需要更新
brew install node
brew install openssh
brew install git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">npm install -g hexo-cli
## 局部安装
# npm install hexo
## hexo是 Hexo 实际依赖的主体命令包，hexo-cli全称 hexo command line interface，是命令行全局指令，会自动将 hexo 安装到目标文件夹的 node_modules 目录下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 初始化博客根目录
hexo init &lt;folder&gt; 
# &lt;folder&gt; 是客户端 Hexo 安装的根目录，以后的所有文件和操作都是在这个目录下完成

# 在默认安装情况下，hexo 命令只在根目录下生效
cd &lt;folder&gt;
# 安装必要的 node.js 模块
npm install

npm install hexo-themes-name
# git clone hexo-themes-name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><h6 id="Hexo-配置"><a href="#Hexo-配置" class="headerlink" title="Hexo 配置"></a>Hexo 配置</h6><p>根目录如下：</p>
<pre class="line-numbers language-dir" data-language="dir"><code class="language-dir">.
├── _config.yml # Hexo 配置文件
├── package.json
├── scaffolds
├── source
|   ├── _drafts
|   └── _posts
└── themes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>直接修改配置文件 <code>_config.yml</code> ,具体每项参数参考官方文档，本文采用远程服务器做 Hexo Server， 所以部署(<code>deploy</code>)部分需要特别处理：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>
  <span class="token key atrule">type</span><span class="token punctuation">:</span> git
  <span class="token key atrule">repo</span><span class="token punctuation">:</span> user_name@remote_server_ip<span class="token punctuation">:</span>remote_server_git_folder
  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master

<span class="token comment">## 以下是我的配置示例</span>
<span class="token comment"># 需要提前安装 git 插件</span>
<span class="token comment"># npm install hexo-deployer-git</span>
<span class="token key atrule">deploy</span><span class="token punctuation">:</span>
  <span class="token key atrule">type</span><span class="token punctuation">:</span> git
  <span class="token key atrule">repo</span><span class="token punctuation">:</span> hexo@x.x.x.x<span class="token punctuation">:</span>/var/www/blog/hexo.git
  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h6 id="Theme-配置"><a href="#Theme-配置" class="headerlink" title="Theme 配置"></a>Theme 配置</h6><p>本文使用<code>Keep</code>作为主题，配置文件是 <code>&lt;folder&gt;/themes/keep/_config.yml</code>，具体设置参考官方文档 <a class="link"   target="_blank" rel="noopener" href="https://keep.xpoet.cn/" >https://keep.xpoet.cn/<i class="fas fa-external-link-alt"></i></a> 。</p>
<h6 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h6><ul>
<li>SSH 免密登录<br>  将私钥（可以本机生成，可以服务器生成，可以通过其他途径生成）<code>id_rsa.pem</code>，安装到<code>~/.ssh/</code>中，并在该目录下添加配置信息，如下：  <pre class="line-numbers language-config" data-language="config"><code class="language-config"># 输入服务器公网ip
Host x.x.x.x
# 输入ECS实例的公网IP地址。
HostName x.x.x.x
# 输入端口号，默认为22。
Port 22
# 输入登录账号。
User user_name
# 输入.pem私钥文件在本机的地址。
IdentityFile ~&#x2F;.ssh&#x2F;id_rsa.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>Git<br>  通过 Git 将本地生成的静态博客页面推送到服务器端，所以本地有所有博客的原始编辑文件，客户端有博客的 <code>public</code> 文件夹，用以访问。相比于 <code>hexo-admin</code>, Git 这种方式不容易被暴力破解,只要更新 hexo 时注意，文件也有本地备份，但是不如另一种方式方便。</li>
</ul>
<hr>
<h2 id="服务器端安装"><a href="#服务器端安装" class="headerlink" title="服务器端安装"></a>服务器端安装</h2><h4 id="安装必备程序-1"><a href="#安装必备程序-1" class="headerlink" title="安装必备程序"></a>安装必备程序</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum install git
yum install httpd
yum install openssh

systemctl start httpd
systemctl start sshd
systemctl enable git-daemon

# 一般不要使用 root 用户，作为远程连接用户，最好可以新开一个
adduser hexo
password xxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="设置-Git-仓库"><a href="#设置-Git-仓库" class="headerlink" title="设置 Git 仓库"></a>设置 Git 仓库</h4><p>这里的 Git 仓库，并不开放访问权限，将发布页面连接到 Apache 允许访问的文件夹。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mkdir &#x2F;home&#x2F;blog
cd &#x2F;home&#x2F;blog
git init --bare hexo.git
vim &#x2F;home&#x2F;blog&#x2F;hexo.git&#x2F;hooks&#x2F;post-receive
git --work-tree&#x3D;&#x2F;var&#x2F;www&#x2F;html --git-dir&#x3D;&#x2F;home&#x2F;blog&#x2F;hexo.git checkout -f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="设置-Apache-文件夹"><a href="#设置-Apache-文件夹" class="headerlink" title="设置 Apache 文件夹"></a>设置 Apache 文件夹</h4><p>如果不使用 <code>/var/www/html</code> 作为访问路径，可以重定向 Apache 的解析目录。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">vim &#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf
## 修改 Directory 标签<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h4 id="设置-SSH-免密登录"><a href="#设置-SSH-免密登录" class="headerlink" title="设置 SSH 免密登录"></a>设置 SSH 免密登录</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 将 id_rsa.pub 添加到 ~&#x2F;.ssh&#x2F;authorized_keys 中&#96;
cat id_rsa.pub &gt;&gt; ~&#x2F;.ssh&#x2F;authorized_keys

# 有 700 和 600 权限就足够使用，744 和 644 按说也可以，但是在权限限定比较严格的 Linux 中，可能会报错。
chmod 700 ~&#x2F;.ssh
chmod 600 ~&#x2F;.ssh&#x2F;authorized_keys

# 在测试联通后，修改 ssh 配置文件，将远程密码和 root 登录取消，提高安全防控，并且允许密钥访问。
vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config
# PasswordAuthentication no
# PermitRootLogin no
# PubkeyAuthentication yes

systemctl restart sshd.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<hr>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hexo clean
hexo g -d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h2 id="个性化"><a href="#个性化" class="headerlink" title="个性化"></a>个性化</h2><ul>
<li>主题</li>
<li>页内搜索</li>
<li>流量分析</li>
<li>私有域名</li>
<li>SEO</li>
<li>多语种发布</li>
<li>…</li>
</ul>
]]></content>
      <categories>
        <category>CS</category>
        <category>Network</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Website</tag>
      </tags>
  </entry>
  <entry>
    <title>SSH</title>
    <url>/uncategory/ssh/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Git</title>
    <url>/uncategory/git/</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
